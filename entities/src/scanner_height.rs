//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "scanner_height")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    pub task_name: String,
    pub chain_name: String,
    pub height: u64,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl Entity {
    pub fn find_by_task_name(task_name: &str) -> Select<Entity> {
        Self::find().filter(Column::TaskName.eq(task_name))
    }
}
